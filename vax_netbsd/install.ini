;minimal VAX - netbsd
; initializes the install and stops and the main menu
; enable error trapping
set on

; general settings
set noquiet

:ENV
; alias echo as echof
set env INSTALL=auto
set env HOME=/home/mwest
set env DATA_DIR=%HOME%/simh/vax-netbsd
set env SIMH_REPO_DIR=%HOME%/repos/simh
set env HOSTNAME=vaxnetbsd
set env NETBSD_VERSION=10.0_RC4
set env NETBSD_ISO=%DATA_DIR%/NetBSD-%NETBSD_VERSION%-vax.iso
set env ROOT_DISK=%DATA_DIR%/netbsd-vax-%INSTALL%.vhd
set env NVR_FILE=%DATA_DIR%/nvram-%INSTALL%.bin
set env echo=echof
; prompt for root password
set env -p "root passwd" ROOT_PASSWD=rootT00R
; promt for entopy
set env -p "entropy string, output of `dd if=/dev/random bs=32 count=1 status=none | openssl base64`" ENTROPY=9d+5pjFpU4BEIAEWF0kJIvBvyp2JLJwmgVcn2WdLSXQ=
; prompt for user name
set env -p "user name: " USER=test
; prompt for user passwd
set env -p "%USER% password:" USER_PASSWD=testT53T

echo "install type is %INSTALL%"

:LOG
; overwrite log with -n
set log -n %DATA_DIR%/%INSTALL%.log

; devices enabled by default
; set ts disable 
; set dz disable 
; set lpt disable 
; set rl disable 
; set ts disable 
; set tq disable 

:ROM
; load boot rom to allow greater than 64MB RAM
; supports up to 512MB RAM
load -r %SIMH_REPO_DIR%/VAX/ka655x.bin
set rom nodelay

:NVRAM
; non-volatile ram
; store state between runs such as boot device
attach nvr %NVR_FILE%

:CPU
; respond to boot, break, and kernel halt by entering interactive mode 
set cpu noautoboot
; kernel HALT returns to simulator
set cpu simhalt
; set 512 MB RAM
set cpu 512m 
; detect when idle and do not use host resources
set cpu idle=netbsd


:DISK
; remove disk if it exists
; sometimes is seems the disk still exists and the menu options change.  race condition?
if exist %ROOT_DISK% ! rm %ROOT_DISK; echo "removed existing disk %ROOT_DISK%"
; sleep in case there is a race condition.  Remove this after install works to try to reproduce.
sleep 1
set rq0 noautosize
set rq0 format=vhd
; set number of blocks 
; block size 512 bytes
; System disk will be a 4GB disk (4*1024*1024*1024/512 = 8388608 blocks)
set -l rq0 RAUSER=8388608
; create vhd format disk for os
; max file size is 2GB unless compiled with
; USE_ADDR64 when it is 1TB
; attach rq0 -f vhd %ROOT_DISK%
attach rq0 %ROOT_DISK%


:ISO
; fetch iso if I don't have it
if not exist %NETBSD_ISO% curl https://cdn.netbsd.org/pub/NetBSD/images/%NETBSD_VERSION%/NetBSD-%NETBSD_VERSION%-vax.iso --output %NETBSD_ISO%
set rq1 cdrom
on OPENERR echof "attach iso status is: %STATUS%\nstatus description is: %TSTATUS%\n"; exit %STATUS%
; -r read-only
; -e file must exist
attach rq1 -r -e  %NETBSD_ISO%
on OPENERR


:NETWORK
; using nat for now
attach xq0 nat:

:EXPECT
; I broke up expect into sets of commands because when multiple rules which one executes seemed undefined.
; This can mostly be avoided by making the expect string very specific, but I did not find a solution to
; "Retype new password:" which is the same for root and user.
; it is easier to debug with fewer rules in effect at any time.


call boot
show expect

; boot
boot cpu
show expect
echo "finished install, exiting"
exit 0


:boot
; 000 commands
; set default boot to disk
; must have NVRAM file attach to persist
expect ">>>" send "set boot dua0\r"; echo "%DATETIME%\tcmd100"; continue
; boot install cd
expect ">>>" call initialize; show expect; send "boot dua1\r"; echo "%DATETIME%\tcmd009"; continue
return

:initialize 
; 100 commands 
; installer is menu driven
; accept vt220 terminal
expect "Terminal type" send "\r"; echo "%DATETIME%\tcmd100"; continue
; use english
expect "enter key." send "\r"; echo "%DATETIME%\tcmd101"; continue 
; install to disk
expect "Install System" send "\r"; echo "%DATETIME%\tcmd104"; continue
; yes, really
expect "quit this procedure" send "b\r"; echo "%DATETIME%\tcmd105"; continue
; install on disk ra0
expect "Available disks" send "a\r"; echo "%DATETIME%\tcmd110"; continue
; use default partitioning
expect "Use default partition sizes" send "b\r"; echo "%DATETIME%\tcmd111";  continue
; Partition sizes ok 
expect "Partition sizes ok" send "x\r"; echo "%DATETIME%\tcmd112"; continue
; minimal
; expect "This is your last chance" call minimal; show expect; send "b\r"; echo "%DATETIME%\tcmd198"; continue
; custom
expect "This is your last chance" call custom; show expect; send "b\r"; echo "%DATETIME%\tcmd199"; continue
return

:minimal
; 200 commands
; c - minimal distribution
; get diskinfo since disk is initialized
diskinfo %ROOT_DISK%
expect "Select your distribution" send "c\r"; echo "%DATETIME% cmd200"; continue
; use http
expect "Sets selected 5" call networking; show expect; send "b\r"; echo "%DATETIME%  cmd299"; continue
return

:custom
; 300 commands
; not tested 
; get diskinfo since disk is initialized
diskinfo %ROOT_DISK%
expect "Custom installation" send "d\r"; echo "%DATETIME% cmd301"; continue
; compiler
expect "Compiler tools" send "e\r"; echo "%DATETIME% cmd302"; continue
; man pages
expect "Manual pages" send "h\r"; echo "%DATETIME% cmd303"; continue
; recovery
expect "Recovery tools" send "j\r"; echo "%DATETIME% cmd304"; continue
; text processing
expect "Text processing tools" send "l\r"; echo "%DATETIME% cmd305"; continue
expect "Install selected sets" send "x\r"; echo "%DATETIME% cmd306"; continue
expect "Sets selected 9" call networking; show expect; send "x\r"; echo "%DATETIME% cmd399"; continue
return

:networking
; 400 commands
; use default network interface
expect "Available interfaces" send "a\r"; echo "%DATETIME% cmd400"; continue
; use default media type
expect "Network media type:" send "\r"; echo "%DATETIME% cmd401"; continue
; auto configure network
expect "Perform autoconfiguration?" send "a\r"; echo "%DATETIME% cmd402"; continue
; hostname
expect "Your host name:" send "%HOSTNAME%\r"; echo "%DATETIME% cmd403"; continue
; no domain
expect "Your DNS domain:" send "\r"; echo "%DATETIME% cmd404"; continue
; accept network configuration
expect "Primary Interface" call distribution; show expect; send "a\r"; echo "%DATETIME% cmd499"; continue
return

:distribution
; 500 commands
; get distribution
expect "Get Distribution" send "x\r"; echo "%DATETIME% cmd500"; continue
; persist network config
expect "want it installed in /etc?" send "a\r"; echo "%DATETIME% cmd501"; continue
; additional configuration
expect "essential things first." send "\r"; echo "%DATETIME% cmd502"; continue
; root password
expect "Changing local password for root" send "%ROOT_PASSWD%\r"; echo "%DATETIME% cmd503"; continue
expect "Retype new password:" send "%ROOT_PASSWD%\r"; echo "%DATETIME%  cmd504"; continue
; entropy
expect "Manually input random characters" send "a\r"; echo "%DATETIME% cmd505"; continue
expect "may not be secure." call configure; show expect; send "%ENTROPY%\r"; echo "%DATETIME%  cmd599"; continue
return

: configure
; 600 commands
; configure options from main menu
; enable sshd
expect "Enable sshd" send "g\r"; echo "%DATETIME% cmd600"; continue
; enable ntpd
expect "Enable ntpd" send "h\r"; echo "%DATETIME% cmd601"; continue
; run ntpd on boot
expect "Run ntpdate at boot" send "i\r"; echo "%DATETIME% cmd602"; continue
; disable cgd
expect "Enable cgd" send "l\r"; echo "%DATETIME% cmd603"; continue
; disable raidframe
expect "Enable raidframe" send "n\r"; echo "%DATETIME% cmd604"; continue
; add a user
; 610
expect "Add a user" send "o\r"; echo "%DATETIME%  cmd610"; continue
expect "8 character username to add" send "%USER%\r"; echo "%DATETIME%  cmd611"; continue
expect "Do you wish to add this user to group wheel?" send "a\r"; echo "%DATETIME% cmd612"; continue
expect "User shell" send "a\r"; echo "%DATETIME% cmd613"; continue
expect "Changing local password for %USER%" send "%USER_PASSWD%\r"; echo "%DATETIME% cmd614"; continue
expect "Retype new password:" call finish; show expect; send "%USER_PASSWD%\r"; echo "%DATETIME%  cmd615"; continue
return


:finish
; final step of configure
expect "Finished configuring" send "x\r"; echo "%DATETIME% cmd699"; continue
; 900
expect "The installation of NetBSD-%NETBSD_VERSION% is now complete" send "\r"; echo "%DATETIME% cmd900"; continue
; done
expect "Exit Install System" send "x\r"; echo "%DATETIME% cmd990"; continue
; shutdown
expect "#" send "shutdown -h now\r"; echo "%DATETIME% cmd999"; continue
; exit simh
return
