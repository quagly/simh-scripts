; VAX - netbsd
; initializes the install and stops
; enable error trapping
set on

; general settings
set noquiet
set env INSTALL=manual
set env SLEEP_SEC=3
set env HOME=/home/mwest
set env DATA_DIR=%HOME%/simh/vax-netbsd
set env SIMH_REPO_DIR=%HOME%/repos/simh
set env NETBSD_VERSION=10.0_RC4
set env NETBSD_ISO=%DATA_DIR%/NetBSD-%NETBSD_VERSION%-vax.iso
set env ROOT_DISK=%DATA_DIR%/netbsd-vax-manual.vhd
set env NVR_FILE=%DATA_DIR%/nvram-%INSTALL%.bin
set env LOG_FILE=%DATA_DIR%/%INSTALL%.log
; alias echo as echof
set env echo=echof

 echo "install type is %INSTALL%"
; log
; overwrite log with -n
set log -n %LOG_FILE%

; devices enabled by default
; set ts disable 
; set dz disable 
; set lpt disable 
; set rl disable 
; set ts disable 
; set tq disable 

:ROM
; load boot rom to allow greater than 64MB RAM
; supports up to 512MB RAM
load -r %SIMH_REPO_DIR%/VAX/ka655x.bin
set rom nodelay

:NVRAM
; non-volatile ram
; store state between runs such as boot device
if exist %NVR_FILE% ! rm %NVR_FILE%; echo "removed existing file %NVR_FILE%"
attach nvr %NVR_FILE%

; CPU
;
; respond to boot, break, and kernel halt by entering interactive mode 
set cpu noautoboot
; kernel HALT returns to simulator
set cpu simhalt
; set 512 MB RAM
set cpu 512m 
; detect when idle and do not use host resources
set cpu idle=netbsd


; DISK
; remove disk if it exists
; sometimes is seems the disk still exists and the menu options change.  race condition?
if exist %ROOT_DISK% ! rm %ROOT_DISK%; echo "removed existing disk %ROOT_DISK%"
set rq0 noautosize
set rq0 format=vhd
; set number of blocks
; block size 512 bytes
; System disk will be a 4GB disk (4*1024*1024*1024/512 = 8388608 blocks)
; hmm... simh reports 8355840 sectors and block size 16384 
set -l rq0 RAUSER=8388608
; set number of MB
; set rq0 RAUSER=4000 
; create vhd format disk for os
; max file size is 2GB unless compiled with
; USE_ADDR64 when it is 1TB
attach rq0 %DATA_DIR%/netbsd-vax-%INSTALL%.vhd

; ISO
; fetch iso if I don't have it
if not exist %NETBSD_ISO% curl https://cdn.netbsd.org/pub/NetBSD/images/%NETBSD_VERSION%/NetBSD-%NETBSD_VERSION%-vax.iso --output %NETBSD_ISO%
set rq1 cdrom
on OPENERR echof "attach iso status is: %STATUS%\nstatus description is: %TSTATUS%\n"; exit %STATUS%
; -r read-only
; -e file must exist
attach rq1 -r -e  %NETBSD_ISO%
on OPENERR


; NETWORK
; using nat for now
attach xq0 nat:
; boot cpu

:boot
; 000 commands
; EXPECT 
; expect will execute in the order defined when multiple expects match
; by default each expect will only execute once and be cleared
; hmm... this doesn't seem to be true.  how are multiple expect matches resovled?
; to see what expect lines are active `show expect`
; VMB prompt
; set default boot to disk
expect ">>>" sleep %SLEEP_SEC%; send "set boot dua0\r"; echo "\ncmd000 %DATETIME%"; continue
; boot install cd
expect ">>>" sleep %SLEEP_SEC%; send "boot dua1\r"; echo "\ncmd001 %DATETIME%"; continue

:initialize 
; 100 commands 
; installer is menu driven
; accept vt220 terminal
expect "Terminal type" sleep %SLEEP_SEC%; send "\r"; echo "\ncmd100 %DATETIME%"; continue
; use english
expect "enter key." sleep %SLEEP_SEC%; send "\r"; echo "\ncmd101 %DATETIME%"; continue 
; install to disk
expect "Install System" sleep %SLEEP_SEC%; send "\r"; echo "\ncmd102 %DATETIME%"; continue
; yes, really
expect "quit this procedure" sleep %SLEEP_SEC%; send "b\r"; echo "\ncmd103 %DATETIME%"; continue
; install on disk ra0
expect "Available disks" sleep %SLEEP_SEC%; send "a\r"; echo "\ncmd110 %DATETIME%"; continue
; use default partitioning
expect "Use default partition sizes" sleep %SLEEP_SEC%;  send "b\r"; echo "\ncmd111 %DATETIME%";  continue
; Partition sizes ok 
expect "Partition sizes ok"  sleep %SLEEP_SEC%;  send "x\r"; echo "\ncmd112 %DATETIME%\t"; continue
; Shall we continue?
expect "This is your last chance"  sleep %SLEEP_SEC%;  send "b\r"; echo "\ncmd113 %DATETIME%"; continue

; instalation without X test
expect "x: Abandon installation" send "b"; sleep %SLEEP_SEC%; continue 
expect "x: Abandon installation" send "\r"; sleep %SLEEP_SEC%; continue 
; use http
expect "j: Abandon installation" send "b"; sleep %SLEEP_SEC%; continue
expect "j: Abandon installation" send "\r"; sleep %SLEEP_SEC%; continue

show expect

; boot
boot cpu
