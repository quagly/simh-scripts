; VAX - netbsd
; initializes the install and stops
; enable error trapping
set on

; general settings
set noquiet
; alias echo as echof
set env echo=echof
set env HOME=/home/mwest
set env DATA_DIR=%HOME%/simh/vax-netbsd
set env SIMH_REPO_DIR=%HOME%/repos/simh
set env NETBSD_VERSION=10.0_RC4
set env NETBSD_ISO=%DATA_DIR%/NetBSD-%NETBSD_VERSION%-vax.iso

; log
; overwrite log with -n
set log -n %DATA_DIR%/manual-install.log

; devices enabled by default
; set ts disable 
; set dz disable 
; set lpt disable 
; set rl disable 
; set ts disable 
; set tq disable 

; load boot rom to allow greater than 64MB RAM
; supports up to 512MB RAM
load -r %SIMH_REPO_DIR%/VAX/ka655x.bin
set rom nodelay

; CPU
;
; respond to boot, break, and kernel halt by entering interactive mode 
set cpu noautoboot
; kernel HALT returns to simulator
set cpu simhalt
; set 512 MB RAM
set cpu 512m 
; detect when idle and do not use host resources
set cpu idle=netbsd


; DISK
; remove disk if it exists
; sometimes is seems the disk still exists and the menu options change.  race condition?
if exist %DATA_DIR%/netbsd-vax-install-ra92.vhd ! rm %DATA_DIR%/netbsd-vax-install-ra92.vhd; echo "removed existing disk"
set rq0 noautosize
set rq0 format=vhd
; set number of MB
set rq0 RAUSER=4000 
; create vhd format disk for os
; max file size is 2GB unless compiled with
; USE_ADDR64 when it is 1TB
attach rq0 -f vhd %DATA_DIR%/netbsd-vax-manual-install.vhd
diskinfo %DATA_DIR%/netbsd-vax-manual-install.vhd


; ISO
; fetch iso if I don't have it
if not exist %NETBSD_ISO% curl https://cdn.netbsd.org/pub/NetBSD/images/%NETBSD_VERSION%/NetBSD-%NETBSD_VERSION%-vax.iso --output %NETBSD_ISO%
set rq1 cdrom
on OPENERR echof "attach iso status is: %STATUS%\nstatus description is: %TSTATUS%\n"; exit %STATUS%
; -r read-only
; -e file must exist
attach rq1 -r -e  %NETBSD_ISO%
on OPENERR


; NETWORK
; using nat for now
attach xq0 nat:
; boot cpu

:boot
; 000 commands
; EXPECT 
; expect will execute in the order defined when multiple expects match
; by default each expect will only execute once and be cleared
; hmm... this doesn't seem to be true.  how are multiple expect matches resovled?
; to see what expect lines are active `show expect`
; VMB prompt
; set default boot to disk
expect ">>>" send "set boot dua0\r"; echo "%DATETIME%\tcmd100"; continue
; boot install cd
expect ">>>" send "boot dua1\r"; echo "%DATETIME%\tcmd001"; continue

; put installer in separate file and call with DO?
:initialize 
; 100 commands 
; installer is menu driven
; accept vt220 terminal
expect "Terminal type" send "\r"; echo "%DATETIME%\tcmd100"; continue
; use english
expect "enter key." send "\r"; echo "%DATETIME%\tcmd101"; continue 
; install to disk
expect "Install System" send "\r"; echo "%DATETIME%\tcmd104"; continue
; yes, really
expect "quit this procedure" send "b\r"; echo "%DATETIME%\tcmd105"; continue
; install on disk ra0
expect "Available disks" send "a\r"; echo "%DATETIME%\tcmd110"; continue
; use default partitioning
expect "Use default partition sizes" send "b\r"; echo "%DATETIME%\tcmd111";  continue
; Partition sizes ok 
expect "Partition sizes ok" send "x\r"; echo "%DATETIME%\tcmd112"; continue
; Shall we continue?
expect "This is your last chance" send "b\r"; echo "%DATETIME%\tcmd113"; continue
; modifying your disks
; expect "Yes or no?" send "b\r"; echo "%DATETIME%\tcmd114"; continue
; one root partition 
; expect "existing partition." send "x\r"; echo "%DATETIME%\tcmd115"; continue
; Status: Finished 
; expect "Status: Finished" send "\r"; echo "%DATETIME%	cmd116"; continue


show expect

; boot
boot cpu

show expect
