; VAX - everything but X11 netbsd
; stop at each option for debuging and alternate manual selection 

; enable error trapping
set on

; general settings
set noquiet

:ENV
set env INSTALL=step
set env HOME=/home/mwest
set env HOSTNAME=vaxnetbsd
set env -a DISK_SIZE_MB=4*1024
set env DATA_DIR=%HOME%/simh/vax-netbsd
set env SIMH_REPO_DIR=%HOME%/repos/simh
set env NETBSD_VERSION=10.0_RC4
set env NETBSD_ISO=%DATA_DIR%/NetBSD-%NETBSD_VERSION%-vax.iso
set env ROOT_DISK=%DATA_DIR%/%INSTALL%-netbsd-vax.vhd
set env NVR_FILE=%DATA_DIR%/%INSTALL%-nvram.bin
set env DEBUG_LOG=%DATA_DIR%/%INSTALL%-debug.log

; alias echo as echof
set env echo=echof
; prompt for root password
set env -p "root passwd" ROOT_PASSWD=rootT00R
; promt for entopy
set env -p "entropy string, output of `dd if=/dev/random bs=32 count=1 status=none | openssl base64`" ENTROPY=9d+5pjFpU4BEIAEWF0kJIvBvyp2JLJwmgVcn2WdLSXQ=
; prompt for user name
set env -p "user name: " USER=test
; prompt for user passwd
set env -p "%USER% password:" USER_PASSWD=testT53T

echo "install type is %INSTALL%"

:LOG
; overwrite log with -n
set log -n %DATA_DIR%/%INSTALL%.log

:EXPECT
; debug output for expect
; -f do not coalease consecutive identical lines into one line
; -n create a new file rather than append
set debug -fn %DEBUG_LOG%
; this con-telnet option appears to be undocumented
; options are defined in sim_console.c.  see sim_con_debug[]
;  TRC: routine calls
;  XMT: Transmitted Data
;  RCV: Received Data
;  RET: Returned Received Data
;  ASY: asynchronous activity
;  CON: connection activity
;  EXP: Expect match activity
;  SND: Send (Inject) data activity
set con-telnet debug=snd;exp 

; devices enabled by default
; set ts disable 
; set dz disable 
; set lpt disable 
; set rl disable 
; set ts disable 
; set tq disable 

:ROM
; load boot rom to allow greater than 64MB RAM
; supports up to 512MB RAM
; one post said that this was built-in now and does not need to be specified
; load -r %SIMH_REPO_DIR%/VAX/ka655x.bin
; set rom nodelay

:NVRAM
; non-volatile ram
; store state between runs such as boot device
; but on install delete existing files so we have a known initial state
if exist %NVR_FILE% ! rm %NVR_FILE%; echo "removed existing file %NVR_FILE%"
attach nvr %NVR_FILE%

:CPU
; respond to boot, break, and kernel halt by entering interactive mode 
set cpu noautoboot
; kernel HALT returns to simulator
set cpu simhalt
; set 512 MB RAM
set cpu 512m 
; detect when idle and do not use host resources
set cpu idle=netbsd


:DISK
; remove disk if it exists
if exist %ROOT_DISK% ! rm %ROOT_DISK; echo "removed existing disk %ROOT_DISK%"
set rq0 noautosize
; use raw disk instead of vhd?
set rq0 format=vhd
; -b for size in MB
set -b rq0 RAUSER=%DISK_SIZE_MB%
attach rq0 %ROOT_DISK%


:ISO
; fetch iso if I don't have it
if not exist %NETBSD_ISO% curl https://cdn.netbsd.org/pub/NetBSD/images/%NETBSD_VERSION%/NetBSD-%NETBSD_VERSION%-vax.iso --output %NETBSD_ISO%
set rq1 cdrom
on OPENERR echof "attach iso status is: %STATUS%\nstatus description is: %TSTATUS%\n"; exit %STATUS%
; -r read-only
; -e file must exist
attach rq1 -r -e  %NETBSD_ISO%
on OPENERR


:NETWORK
; using nat for now
attach xq0 nat:

call boot

; boot
boot cpu
exit


:boot
; set default boot to disk dua0
; must have NVRAM file attach to persist
expect ">>>" send "set boot dua0"; continue
; boot install cd
expect ">>>"  send "boot dua1"; call initialize; continue
return


:initialize 
; installer is menu driven
; accept vt220 terminal
; expect "Terminal type" send "\r"; continue
; use english
; expect "enter key." send "\r"; continue 
; install to disk
; expect "Install System" send "\r"; continue
; yes, really
expect "quit this procedure" send "b"; continue
; install on disk ra0
expect "Available disks" send "a"; continue
; use default partitioning
expect "Use default partition sizes" send "b"; continue
; Partition sizes ok 
expect "Partition sizes ok" send "x"; continue
; withoutX
expect "This is your last chance" call withoutX; send "b"; continue
return


:withoutX
; b -  
; does not include X11
; matching the last string output so that they full menu is visible
; use minimal "c" when testing to reduce download 
; expect "x: Abandon installation" send "c"; continue
expect "x: Abandon installation" send "b"; continue
; use http
expect "j: Abandon installation" call networking; send "b"; continue
return


:networking
; 400 commands
; use default network interface
expect "Available interfaces" send "a"; continue
; use default media type
; expect "Network media type:" send "\r"; continue
; auto configure network
expect "Perform autoconfiguration?" send "a"; continue
; hostname
expect "Your host name:" send "%HOSTNAME%";  continue
; no domain
; expect "Your DNS domain:" send "\r"; continue
; accept network configuration
expect "Primary Interface" call distribution; send "a"; continue
; expect "Primary Interface" send "a"; continue
return


:distribution
; 500 commands
; get distribution
; TODO
; something wrong with the display here so I cannot see the menu.
; but hitting enter seems to work
; probably need to match the last output.  See withoutX:
expect "Get Distribution" send "x"; continue
; persist network config
expect "want it installed in /etc?" send "a"; continue
; additional configuration
expect "essential things first." continue
; root password
expect "Changing local password for root" send "%ROOT_PASSWD%"; continue
expect "Retype new password:" send "%ROOT_PASSWD%"; continue
; entropy
expect "Manually input random characters" send "a"; continue
expect "may not be secure." call configure; send "%ENTROPY%"; continue
return


:configure
; 600 commands
; configure options from main menu
; enable/disable until add a user 
; enable sshd
expect "Enable sshd" send "g"; send "\r"; continue
; enable ntpd
expect "Enable ntpd" send "h"; send "\r"; continue
; run ntpd on boot
expect "Run ntpdate at boot" send "i"; send "\r"; continue
; disable cgd
expect "Enable cgd" send "l"; send "\r"; continue
; disable raidframe
expect "Enable raidframe" send "n"; send "\r"; continue
; add a user
; 610
expect "Add a user" send "o"; continue
expect "8 character username to add" send "%USER%"; continue
expect "Do you wish to add this user to group wheel?" send "a"; continue
expect "User shell" send "a"; continue
expect "Changing local password for %USER%" send "%USER_PASSWD%"; continue
expect "Retype new password:" call finish; send "%USER_PASSWD%"; continue
return


:finish
; final step of configure
expect "Finished configuring" send "x"; continue
; 900
expect "The installation of NetBSD-%NETBSD_VERSION% is now complete" continue
; done
expect "Exit Install System" send "x"; continue
; shutdown
expect "#" send "shutdown -h now"; continue; 
return
